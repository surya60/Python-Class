###############Assignment 5######################################


2.)

from math import sqrt

a = float(input("Enter  a:"))
b = float(input("Enter  b:"))
c = float(input("Enter  c:"))

condition = b**2 - 4*a*c

if (condition > 0):
 number_roots = 2
 root1 = (((-b) + sqrt(condition))/(2*a))
 root2 = (((-b) - sqrt(condition))/(2*a))
 print(" The roots are {0:.1f} and {1:.1f}".format(root1,root2))
elif (condition == 0):
 number_roots = 1
 root1 = round((-b) / 2*a ,2)
 print(" the roots are {0:d}".formaat(root1))
else:
  print("\n The equation has no roots.")

3.)

caffeine_intake = 130
hours = 0
while caffeine_intake >=65:
   caffeine_intake = caffeine_intake - (0.13*caffeine_intake)
   hours  = hours  + 1
print("CAFFINE VALUES")
print("One cup: less than 65 mg will remain after " + str(hours )+ " hours.")

caffeine_intake = 130
number_hours  = 24
while hours  > 0:
  caffeine_intake = caffeine_intake - (0.13*caffeine_intake)
  hours  = hours  - 1
 
print("One cup: {0:.2f} mg. will remain after 24 hours.".format(caffeine_intake))

result = 0
caffeine_intake_24 = 130
hours  = 25 #total 25 cups of coffee
while hours >0:
  hours  = hours  - 1
  result  = caffeine_intake_24 + result  - 0.13*result 

print("Hourly cups:  {0:.2f} mg. will remain after 24 hours.".format(result))

4.)

import math
print("{0:<15s}{1:<15s}{2:>15s}".format("Interest Rate ","Doubling Time(years)","Actual doubling"))
rate = 1
while (rate <= 20):
    
    number_years = round(math.ceil(math.log(2.0) / math.log((1.0 + (rate / 100.0)))))
    yest_years = round(72.0 / rate, 0) #Estimated doubling time
    print("{0:<15n}{1:<15n}{2:^15n}".format(rate ,yest_years,number_years))
    rate += 1
    
    
5.)    

rate = 0.04
principal = 5000
deposit= 5000
amount = 0
i = 0
j = 0
while i < 32 :
    amount = principal*(1 + rate)
    principal = amount + 5000
    i +=1

while j < 14 :
    amt= deposit*(1 + rate)
    deposit = amt + 5000
    j +=1
total = deposit *((1+rate)**33)
print  ("              AMOUNTS DEPOSITED           ")
print ("\n Earl: ${0:.2f}".format(5000*15),"        Larry: ${0:.2f}".format(5000*33))
print ("\n        AMOUNTS IN IRA UPON RETIREMENT       ")
print ("\n Earl: ${0:.2f}".format(total),"        Larry: ${0:.2f}".format(principal))



    
